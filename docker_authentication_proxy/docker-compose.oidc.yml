version: "3.9"
services:
    # AUTHENTICATION PROXY
  proxy:
    image: bitnami/oauth2-proxy:7.3.0
    container_name: oauth2_proxy
    command:
      - --http-address
      - 0.0.0.0:4180
    ports:
      - "4180:4180"
      - "4443:4433"
    networks:
      - iris_backend
    environment:
      OAUTH2_PROXY_UPSTREAMS: ${IRIS_WEB_APP_URL}
      OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: IRIS Auth
      OAUTH2_PROXY_PROVIDER: oidc
      OAUTH2_PROXY_OIDC_ISSUER_URL: ${OIDC_IRIS_ISSUER_URL}
      OAUTH2_PROXY_CLIENT_ID: ${OIDC_IRIS_CLIENT_ID}
      OAUTH2_PROXY_CLIENT_SECRET: ${OIDC_IRIS_CLIENT_SECRET}
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: true
      OAUTH2_PROXY_REVERSE_PROXY: true
      OAUTH2_PROXY_EMAIL_DOMAINS: '*'
      OAUTH2_PROXY_COOKIE_DOMAIN: '*'
      OAUTH2_PROXY_WHITELIST_DOMAIN: '*'
      OAUTH2_PROXY_REDIRECT_URL: https://127.0.0.1/oauth2/callback
      OAUTH2_PROXY_COOKIE_SECRET: ${OAUTH2_PROXY_COOKIE_SECRET}
      OAUTH2_PROXY_COOKIE_NAME: SESSION
      OAUTH2_PROXY_COOKIE_SECURE: true
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: true
      OAUTH2_PROXY_SESSION_STORE_TYPE: redis
      OAUTH2_PROXY_REDIS_CONNECTION_URL: redis://redis
      OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS: true
      OAUTH2_PROXY_SET_XAUTHREQUEST: true

    depends_on:
      - redis

  redis:
    image: redis:7.0.2-alpine3.16
    volumes:
      - cache:/data

    networks:
      - iris_backend
      - iris_frontend

  nginx:
    build:
      context: ./docker/nginx
      args:
        NGINX_CONF_GID: 1234
    image: iriswebapp_nginx:latest
    container_name: iriswebapp_nginx
    volumes:
      - "./docker/nginx/nginx.oidc.conf:/etc/nginx/nginx.conf"


volumes:
  cache:
    driver: local